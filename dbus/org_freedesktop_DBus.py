"""Auto-generated DBus bindings

Generated by jeepney version 0.8.0

Object path: /org/freedesktop/DBus
Bus name   : org.freedesktop.DBus
"""

from jeepney.wrappers import MessageGenerator, new_method_call


class DBus(MessageGenerator):
    interface = 'org.freedesktop.DBus'

    def __init__(self, object_path='/org/freedesktop/DBus',
                 bus_name='org.freedesktop.DBus'):
        super().__init__(object_path=object_path, bus_name=bus_name)

    def Hello(self):
        return new_method_call(self, 'Hello')

    def RequestName(self, arg0, arg1):
        return new_method_call(self, 'RequestName', 'su',
                               (arg0, arg1))

    def ReleaseName(self, arg0):
        return new_method_call(self, 'ReleaseName', 's',
                               (arg0,))

    def StartServiceByName(self, arg0, arg1):
        return new_method_call(self, 'StartServiceByName', 'su',
                               (arg0, arg1))

    def UpdateActivationEnvironment(self, arg0):
        return new_method_call(self, 'UpdateActivationEnvironment', 'a{ss}',
                               (arg0,))

    def NameHasOwner(self, arg0):
        return new_method_call(self, 'NameHasOwner', 's',
                               (arg0,))

    def ListNames(self):
        return new_method_call(self, 'ListNames')

    def ListActivatableNames(self):
        return new_method_call(self, 'ListActivatableNames')

    def AddMatch(self, arg0):
        return new_method_call(self, 'AddMatch', 's',
                               (arg0,))

    def RemoveMatch(self, arg0):
        return new_method_call(self, 'RemoveMatch', 's',
                               (arg0,))

    def GetNameOwner(self, arg0):
        return new_method_call(self, 'GetNameOwner', 's',
                               (arg0,))

    def ListQueuedOwners(self, arg0):
        return new_method_call(self, 'ListQueuedOwners', 's',
                               (arg0,))

    def GetConnectionUnixUser(self, arg0):
        return new_method_call(self, 'GetConnectionUnixUser', 's',
                               (arg0,))

    def GetConnectionUnixProcessID(self, arg0):
        return new_method_call(self, 'GetConnectionUnixProcessID', 's',
                               (arg0,))

    def GetAdtAuditSessionData(self, arg0):
        return new_method_call(self, 'GetAdtAuditSessionData', 's',
                               (arg0,))

    def GetConnectionSELinuxSecurityContext(self, arg0):
        return new_method_call(self, 'GetConnectionSELinuxSecurityContext', 's',
                               (arg0,))

    def ReloadConfig(self):
        return new_method_call(self, 'ReloadConfig')

    def GetId(self):
        return new_method_call(self, 'GetId')

    def GetConnectionCredentials(self, arg0):
        return new_method_call(self, 'GetConnectionCredentials', 's',
                               (arg0,))

class Monitoring(MessageGenerator):
    interface = 'org.freedesktop.DBus.Monitoring'

    def __init__(self, object_path='/org/freedesktop/DBus',
                 bus_name='org.freedesktop.DBus'):
        super().__init__(object_path=object_path, bus_name=bus_name)

    def BecomeMonitor(self, arg0, arg1):
        return new_method_call(self, 'BecomeMonitor', 'asu',
                               (arg0, arg1))

class Stats(MessageGenerator):
    interface = 'org.freedesktop.DBus.Debug.Stats'

    def __init__(self, object_path='/org/freedesktop/DBus',
                 bus_name='org.freedesktop.DBus'):
        super().__init__(object_path=object_path, bus_name=bus_name)

    def GetStats(self):
        return new_method_call(self, 'GetStats')

    def GetConnectionStats(self, arg0):
        return new_method_call(self, 'GetConnectionStats', 's',
                               (arg0,))

    def GetAllMatchRules(self):
        return new_method_call(self, 'GetAllMatchRules')
